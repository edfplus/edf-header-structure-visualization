{"version":3,"sources":["../../dist/index.es.js","FileResource.js","edf-header.js","index.js","App.js"],"names":["staticFields","name","size","description","dynamicFields","Header","react_default","a","memo","_ref","groups","setHoveredItem","createElement","className","concat","map","_ref2","_ref2$name","_ref2$channel","channel","_ref2$color","color","_ref2$values","values","key","onMouseOver","char","i","index_es_EdfHeaderGrid","_ref3","edfHeader","hoveredItem","parsedHeader","Object","react","header","numberOfSignals","substr","index","staticHeader","slice","split","dynamicHeader","forEach","Math","min","push","parseHeader","onMouseLeave","getChannelNames","Array","from","val","EdfHeaderLegend","channelNames","includes","field","length","css","ref","insertAt","document","head","getElementsByTagName","style","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","styleInject","FileResource","file","classCallCheck","this","isLocal","reader","FileReader","typeMap","text","arraybuffer","_this","options","arguments","undefined","till","blob","promise","Promise","resolve","onload","evt","target","result","edf_header","ReactDOM","render","_useState","useState","_useState2","slicedToArray","_useState3","defaultHeader","_useState4","seEdftHeader","props","onDrop","asyncToGenerator","regenerator_default","mark","_callee","files","resource","_args","wrap","_context","prev","next","read","sent","stop","apply","Fragment","es","getRootProps","getInputProps","isDragActive","assign","getElementById"],"mappings":"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","file":"static/js/main.ba36580e.chunk.js","sourcesContent":["import React, { useMemo, useState } from 'react';\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n/*\n  == EDF Structure ==\n\n  STATIC HEADER RECORD\n  --------------------\n  8 ascii  : version of this data format (0)\n  80 ascii : local patient identification\n  80 ascii : local recording identification\n  8 ascii  : startdate of recording (dd.mm.yy)\n  8 ascii  : starttime of recording (hh.mm.ss)\n  8 ascii  : number of bytes in header record\n  44 ascii : reserved\n  8 ascii  : number of data records\n  8 ascii  : duration of a data record, in seconds\n  4 ascii  : number of signals (ns) in data record\n\n  DYNAMIC HEADER RECORD\n  ---------------------\n  ns * 16 ascii : ns * label (e.g. EEG Fpz-Cz or Body temp)\n  ns * 80 ascii : ns * transducer type (e.g. AgAgCl electrode)\n  ns * 8 ascii  : ns * physical dimension (e.g. uV or degreeC)\n  ns * 8 ascii  : ns * physical minimum (e.g. -500 or 34)\n  ns * 8 ascii  : ns * physical maximum (e.g. 500 or 40)\n  ns * 8 ascii  : ns * digital minimum (e.g. -2048)\n  ns * 8 ascii  : ns * digital maximum (e.g. 2047)\n  ns * 80 ascii : ns * prefiltering (e.g. HP:0.1Hz LP:75Hz)\n  ns * 8 ascii  : ns * nr of samples in each data record\n  ns * 32 ascii : ns * reserved\n\n  DATA RECORD\n  -----------\n  nr of samples[1] * integer : first signal in the data record\n  nr of samples[2] * integer : second signal\n  ..\n  nr of samples[ns] * integer : last signal\n*/\n\n\nvar staticFields = [\n/* eslint-disable no-multi-spaces, key-spacing */\n{\n  name: 'version',\n  size: 8,\n  description: 'version of this data format'\n}, {\n  name: 'patientIdentification',\n  size: 80,\n  description: 'local patient identification'\n}, {\n  name: 'recordIdentification',\n  size: 80,\n  description: 'local recording identification'\n}, {\n  name: 'startDate',\n  size: 8,\n  description: 'startdate of recording (dd.mm.yy)'\n}, {\n  name: 'startTime',\n  size: 8,\n  description: 'starttime of recording (hh.mm.ss)'\n}, {\n  name: 'recordHeaderByteSize',\n  size: 8,\n  description: 'number of bytes in header record'\n}, {\n  name: 'staticReserved',\n  size: 44,\n  description: 'reserved'\n}, {\n  name: 'numberOfDataRecords',\n  size: 8,\n  description: 'number of data records'\n}, {\n  name: 'recordDurationTime',\n  size: 8,\n  description: 'duration of a data record (seconds)'\n}, {\n  name: 'numberOfSignals',\n  size: 4,\n  description: 'number of signals in data record'\n}];\n/* eslint-enable no-multi-spaces, key-spacing */\n\nvar dynamicFields = [\n/* eslint-disable no-multi-spaces, key-spacing */\n{\n  name: 'label',\n  size: 16,\n  description: 'label'\n}, {\n  name: 'transducerType',\n  size: 80,\n  description: 'transducer type'\n}, {\n  name: 'physicalDimension',\n  size: 8,\n  description: 'physical dimension'\n}, {\n  name: 'physicalMinimum',\n  size: 8,\n  description: 'physical minimum'\n}, {\n  name: 'physicalMaximum',\n  size: 8,\n  description: 'physical maximum'\n}, {\n  name: 'digitalMinimum',\n  size: 8,\n  description: 'digital minimum'\n}, {\n  name: 'digitalMaximum',\n  size: 8,\n  description: 'digital maximum'\n}, {\n  name: 'preFiltering',\n  size: 80,\n  description: 'prefiltering'\n}, {\n  name: 'numberOfSamples',\n  size: 8,\n  description: 'number of samples in each data record'\n}, {\n  name: 'dynamicReserved',\n  size: 32,\n  description: 'reserved'\n}];\n/* eslint-enable no-multi-spaces, key-spacing */\n\nfunction parseHeader(header) {\n  var numberOfSignals = +header.substr(252, 4);\n  var color = 0;\n  var index = 0;\n  var staticHeader = staticFields.map(function (_ref) {\n    var name = _ref.name,\n        size = _ref.size;\n    var values = header.slice(index, index + size).split('');\n    index += size;\n    color = (color + 1) % 10;\n    return {\n      name: name,\n      values: values,\n      color: color\n    };\n  });\n  var dynamicHeader = [];\n  dynamicFields.forEach(function (_ref2) {\n    var name = _ref2.name,\n        size = _ref2.size;\n\n    for (var channel = 1; channel <= numberOfSignals; channel++) {\n      // starts with 1\n      var values = header.slice(index, index + size).split('');\n      index += size;\n      color = (channel - 1) % Math.min(numberOfSignals, 10);\n      dynamicHeader.push({\n        name: name,\n        channel: \"channel-\".concat(channel),\n        values: values,\n        color: color\n      });\n    }\n  });\n  return {\n    staticHeader: staticHeader,\n    dynamicHeader: dynamicHeader\n  };\n}\n\nvar Header = React.memo(function (_ref) {\n  var groups = _ref.groups,\n      name = _ref.name,\n      setHoveredItem = _ref.setHoveredItem;\n  return React.createElement(\"div\", {\n    className: \"header \".concat(name)\n  }, groups.map(function (_ref2) {\n    var _ref2$name = _ref2.name,\n        name = _ref2$name === void 0 ? '' : _ref2$name,\n        _ref2$channel = _ref2.channel,\n        channel = _ref2$channel === void 0 ? '' : _ref2$channel,\n        _ref2$color = _ref2.color,\n        color = _ref2$color === void 0 ? 1 : _ref2$color,\n        _ref2$values = _ref2.values,\n        values = _ref2$values === void 0 ? [] : _ref2$values;\n    return React.createElement(\"div\", {\n      key: \"\".concat(name, \"-\").concat(channel),\n      className: \"group \".concat(name, \" \").concat(channel, \" c\").concat(color),\n      onMouseOver: function onMouseOver() {\n        return setHoveredItem(\"\".concat(name, \" \").concat(channel));\n      }\n    }, values.map(function (char, i) {\n      return React.createElement(\"code\", {\n        key: i\n      }, char);\n    }));\n  }));\n});\n\nvar EdfHeaderGrid = function EdfHeaderGrid(_ref3) {\n  var edfHeader = _ref3.edfHeader,\n      hoveredItem = _ref3.hoveredItem,\n      setHoveredItem = _ref3.setHoveredItem;\n  var parsedHeader = useMemo(function () {\n    return parseHeader(edfHeader);\n  }, [edfHeader]);\n  return React.createElement(\"div\", {\n    className: \"edf-grid \".concat(hoveredItem),\n    onMouseLeave: function onMouseLeave() {\n      return setHoveredItem('NONE');\n    }\n  }, React.createElement(Header, {\n    groups: parsedHeader.staticHeader,\n    name: \"static-header\",\n    setHoveredItem: setHoveredItem\n  }), React.createElement(Header, {\n    groups: parsedHeader.dynamicHeader,\n    name: \"dynamic-header\",\n    setHoveredItem: setHoveredItem\n  }));\n};\n\nvar getChannelNames = function getChannelNames(edfHeader) {\n  var numberOfSignals = +edfHeader.substr(252, 4);\n  return Array.from(new Array(numberOfSignals)).map(function (val, index) {\n    return \"channel-\".concat(index + 1);\n  });\n};\n\nfunction EdfHeaderLegend(_ref) {\n  var edfHeader = _ref.edfHeader,\n      hoveredItem = _ref.hoveredItem,\n      setHoveredItem = _ref.setHoveredItem;\n  var channelNames = useMemo(function () {\n    return getChannelNames(edfHeader);\n  }, [edfHeader]);\n  return React.createElement(\"div\", {\n    className: \"legend flex \".concat(hoveredItem),\n    onMouseLeave: function onMouseLeave() {\n      return setHoveredItem('NONE');\n    }\n  }, React.createElement(\"div\", {\n    className: \"container-static\"\n  }, React.createElement(\"h2\", {\n    onMouseOver: function onMouseOver() {\n      return setHoveredItem('static-header');\n    },\n    className: \"\".concat(hoveredItem.includes('static-header') ? 'active' : '')\n  }, \"Static Header\"), React.createElement(\"ul\", null, staticFields.map(function (field) {\n    return React.createElement(\"li\", {\n      key: field.name,\n      className: \"\".concat(field.name, \" \").concat(hoveredItem.includes(field.name) ? 'active' : ''),\n      onMouseOver: function onMouseOver() {\n        return setHoveredItem(field.name);\n      }\n    }, field.description);\n  }))), React.createElement(\"div\", {\n    className: \"container-dynamic\"\n  }, React.createElement(\"h2\", {\n    onMouseOver: function onMouseOver() {\n      return setHoveredItem('dynamic-header');\n    },\n    className: \"\".concat(hoveredItem.includes('dynamic-header') ? 'active' : '')\n  }, \"Dynamic Header\"), React.createElement(\"div\", {\n    className: \"flex\"\n  }, React.createElement(\"div\", null, React.createElement(\"h3\", null, \"Parts\"), React.createElement(\"ul\", null, dynamicFields.map(function (field) {\n    return React.createElement(\"li\", {\n      key: field.name,\n      className: \"\".concat(field.name, \" \").concat(hoveredItem.includes(field.name) ? 'active' : ''),\n      onMouseOver: function onMouseOver() {\n        return setHoveredItem(field.name);\n      }\n    }, field.description);\n  }))), React.createElement(\"div\", null, React.createElement(\"h3\", null, \"Channels\"), React.createElement(\"ul\", {\n    className: \"colorable\"\n  }, channelNames.map(function (name, index) {\n    return React.createElement(\"li\", {\n      key: name,\n      className: \"\".concat(name, \" \").concat(hoveredItem.includes(name) ? 'active' : '', \" c\").concat(index % Math.min(channelNames.length, 10)),\n      onMouseOver: function onMouseOver() {\n        return setHoveredItem(name);\n      }\n    }, name, \" \", React.createElement(\"code\", {\n      className: \"color-bubble\"\n    }));\n  }))))));\n}\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \"/* Colors */\\n\\n.edf-header-visualization .c0 code { background-color: #ff93a5 }\\n.edf-header-visualization .c1 code { background-color: #a8ffaa }\\n.edf-header-visualization .c2 code { background-color: #ffff91 }\\n.edf-header-visualization .c3 code { background-color: #b4c0ff }\\n.edf-header-visualization .c4 code { background-color: #ffe690 }\\n.edf-header-visualization .c5 code { background-color: #bcffff }\\n.edf-header-visualization .c6 code { background-color: #ffa8ff }\\n.edf-header-visualization .c7 code { background-color: #ffffff }\\n.edf-header-visualization .c8 code { background-color: #aafdf3 }\\n.edf-header-visualization .c9 code { background-color: #c7bcb0 }\\n\\n/* Grid */\\n\\n.edf-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(1.25em, 1fr));\\n  grid-gap: 1px;\\n  grid-auto-rows: 1.25em;\\n}\\n\\n.edf-grid .header,\\n.edf-grid .group {\\n  display: contents;\\n}\\n\\n.edf-grid code {\\n  font-size: .85em;\\n  line-height: 1.6;\\n  text-align: center;\\n}\\n\\n.edf-grid.version .version code,\\n.edf-grid.patientIdentification .patientIdentification code,\\n.edf-grid.recordIdentification .recordIdentification code,\\n.edf-grid.startDate .startDate code,\\n.edf-grid.startTime .startTime code,\\n.edf-grid.recordHeaderByteSize .recordHeaderByteSize code,\\n.edf-grid.staticReserved .staticReserved code,\\n.edf-grid.numberOfDataRecords .numberOfDataRecords code,\\n.edf-grid.recordDurationTime .recordDurationTime code,\\n.edf-grid.numberOfSignals .numberOfSignals code,\\n.edf-grid.label .label code,\\n.edf-grid.transducerType .transducerType code,\\n.edf-grid.physicalDimension .physicalDimension code,\\n.edf-grid.physicalMinimum .physicalMinimum code,\\n.edf-grid.physicalMaximum .physicalMaximum code,\\n.edf-grid.digitalMinimum .digitalMinimum code,\\n.edf-grid.digitalMaximum .digitalMaximum code,\\n.edf-grid.preFiltering .preFiltering code,\\n.edf-grid.numberOfSamples .numberOfSamples code,\\n.edf-grid.dynamicReserved .dynamicReserved code {\\n  filter: invert(1) saturate(2);\\n  outline: 1px solid white;\\n}\\n\\n.edf-grid.static-header .static-header code,\\n.edf-grid.dynamic-header .dynamic-header code,\\n.edf-grid.channel-1 .channel-1 code,\\n.edf-grid.channel-2 .channel-2 code,\\n.edf-grid.channel-3 .channel-3 code,\\n.edf-grid.channel-4 .channel-4 code,\\n.edf-grid.channel-5 .channel-5 code,\\n.edf-grid.channel-6 .channel-6 code,\\n.edf-grid.channel-7 .channel-7 code,\\n.edf-grid.channel-8 .channel-8 code,\\n.edf-grid.channel-9 .channel-9 code,\\n.edf-grid.channel-10 .channel-10 code,\\n.edf-grid.channel-11 .channel-11 code,\\n.edf-grid.channel-12 .channel-12 code,\\n.edf-grid.channel-13 .channel-13 code,\\n.edf-grid.channel-14 .channel-14 code,\\n.edf-grid.channel-15 .channel-15 code,\\n.edf-grid.channel-16 .channel-16 code,\\n.edf-grid.channel-17 .channel-17 code,\\n.edf-grid.channel-18 .channel-18 code,\\n.edf-grid.channel-19 .channel-19 code,\\n.edf-grid.channel-20 .channel-20 code,\\n.edf-grid.channel-21 .channel-21 code,\\n.edf-grid.channel-22 .channel-22 code,\\n.edf-grid.channel-23 .channel-23 code,\\n.edf-grid.channel-24 .channel-24 code,\\n.edf-grid.channel-25 .channel-25 code,\\n.edf-grid.channel-26 .channel-26 code,\\n.edf-grid.channel-27 .channel-27 code,\\n.edf-grid.channel-28 .channel-28 code,\\n.edf-grid.channel-29 .channel-29 code,\\n.edf-grid.channel-30 .channel-30 code,\\n.edf-grid.channel-31 .channel-31 code,\\n.edf-grid.channel-32 .channel-32 code,\\n.edf-grid.channel-33 .channel-33 code,\\n.edf-grid.channel-34 .channel-34 code,\\n.edf-grid.channel-35 .channel-35 code,\\n.edf-grid.channel-36 .channel-36 code,\\n.edf-grid.channel-37 .channel-37 code,\\n.edf-grid.channel-38 .channel-38 code,\\n.edf-grid.channel-39 .channel-39 code,\\n.edf-grid.channel-40 .channel-40 code,\\n.edf-grid.channel-41 .channel-41 code,\\n.edf-grid.channel-42 .channel-42 code,\\n.edf-grid.channel-43 .channel-43 code,\\n.edf-grid.channel-44 .channel-44 code,\\n.edf-grid.channel-45 .channel-45 code,\\n.edf-grid.channel-46 .channel-46 code,\\n.edf-grid.channel-47 .channel-47 code,\\n.edf-grid.channel-48 .channel-48 code,\\n.edf-grid.channel-49 .channel-49 code,\\n.edf-grid.channel-49 .channel-50 code {\\n  filter: saturate(3);\\n  outline: 1px solid black;\\n}\\n\\n/* Flexgrid */\\n\\n.flex {\\n  margin: 0 -.5em;\\n  display: flex;\\n}\\n\\n.flex > * {\\n  flex: 1;\\n  margin: 0 .5em;\\n}\\n\\n/* Legend */\\n\\n.legend {\\n  margin-top: 1em;\\n}\\n\\n.legend ul {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.legend .container-static h2 {\\n  margin-bottom: 1.85rem;\\n}\\n\\n.legend .container-dynamic {\\n  flex: 2;\\n}\\n\\n.legend h2,\\n.legend li {\\n  margin: 0;\\n  list-style: none;\\n  background: #f6f6f6;\\n  border: 1px solid #e5e5e5;\\n  padding: 2px 2px 2px 5px;\\n  cursor: pointer;\\n}\\n\\n.legend li {\\n  margin-top: -1px;\\n  line-height: 1.5;\\n}\\n\\n.legend h1,\\n.legend h2,\\n.legend h3 { line-height: 1; }\\n.legend h2 { padding: 4px 5px 5px; }\\n.legend h3 { margin: 6px 5px 7px; }\\n\\n.legend .active {\\n  background-color: #a8ffaa;\\n}\\n\\n.legend .color-bubble {\\n  display: inline-block;\\n  width: 1.5em;\\n  height: 1.5em;\\n  float: right;\\n}\\n\";\nstyleInject(css);\n\nfunction EdfHeaderVisualization(_ref) {\n  var edfHeader = _ref.edfHeader;\n\n  var _useState = useState('NONE'),\n      _useState2 = _slicedToArray(_useState, 2),\n      hoveredItem = _useState2[0],\n      setHoveredItem = _useState2[1];\n\n  var props = {\n    edfHeader: edfHeader,\n    hoveredItem: hoveredItem,\n    setHoveredItem: setHoveredItem\n  };\n  return React.createElement(\"div\", {\n    className: \"edf-header-visualization\"\n  }, React.createElement(EdfHeaderGrid, props), React.createElement(EdfHeaderLegend, props));\n}\n\nexport { EdfHeaderVisualization, EdfHeaderGrid, EdfHeaderLegend };","export default class FileResource {\n\n  constructor(file) {\n    this.file = file;\n    this.size = this.file.size;\n    this.name = this.file.name;\n    this.isLocal = true;\n    this.reader = new FileReader();\n    this.typeMap = {\n      text: 'readAsText',\n      arraybuffer: 'readAsArrayBuffer',\n    };\n  }\n\n  read(options = {}) {\n    const type = this.typeMap[options.type || 'text'];\n    const from = options.from || 0;\n    const till = options.till || this.size;\n    const blob = this.file.slice(from, till);\n\n    const promise = new Promise((resolve) => {\n      this.reader.onload = evt => resolve(evt.target.result);\n    });\n\n    this.reader[type](blob);\n\n    return promise;\n  }\n\n}\n","export default '0       AZL:0104697 EEG:0879/87 Jan van Leiden            M 02.08.51                    MPX:0130 date:24.06.87 time:04.35.00-04.55.00 pwd:Technician  Gotosleep:  .  .0024.06.8704.35.00+2048                                               +40     +30     +7  FpzCz EEG       PzOz  EEG       EOG   horizontalResp. flow      Subm. EMG       Temp. body      Event marker    Ag-AgCl electrodes                                                              Ag-AgCl electrodes                                                              Ag-AgCl electrodes                                                              Oral-nasal thermistors                                                          Ag-AgCl electrodes                                                              Rectal thermistor                                                               Marker button                                                                   uV      uV      uV      degree CuV-mrs  degree C        -199    -189    -978    ?       0       +36     off     +196    +188    +967    ?       +4      +38     on      -2048   -2048   -2048   -2048   0       -955    +200    +2047   +2047   +2047   +2047   +2000   +1096   +900    HP:0.5Hz LP:100Hz                                                               HP:0.5Hz LP:100Hz                                                               HP:0.5Hz LP:100Hz                                                               HP:0.03Hz LP:0.9Hz                                                              HP:16Hz Rectification LP:0.7Hz                                                                                                                                  Hold during 2 seconds                                                           3000    3000    3000    30      30      30      30                                                                                                                                                                                                                                      ';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { EdfHeaderGrid, EdfHeaderLegend } from 'edf-header-visualization';\nimport FileResource from './FileResource';\nimport defaultHeader from './edf-header';\n\nexport default function EdfHeaderVisualization() {\n  const [hoveredItem, setHoveredItem] = useState('NONE');\n  const [edfHeader, seEdftHeader] = useState(defaultHeader);\n  const props = { edfHeader, hoveredItem, setHoveredItem };\n\n  const onDrop = async (files = []) => {\n    const resource = new FileResource(files[0]);\n    const staticHeader = await resource.read({ from: 0, till: 256 });\n    const numberOfSignals = +staticHeader.substr(252, 4);\n    const dynamicHeader = await resource.read({ from: 256, till: 256 + numberOfSignals * 256 });\n    seEdftHeader(staticHeader + dynamicHeader);\n  };\n\n  return (\n    <>\n      <Dropzone onDrop={onDrop}>\n        {({ getRootProps, getInputProps, isDragActive }) => (\n          <div className={`dropzone ${isDragActive ? 'active' : ''}`} {...getRootProps()}>\n            <input {...getInputProps()} />\n            This tools aims to help you understand EDFs static and dynamic header.<br />\n            You can inspect own files by <strong>clicking this area</strong> or <strong>dropping them onto it</strong>.\n          </div>\n        )}\n      </Dropzone>\n      <div className=\"edf-header-visualization flex\">\n        <EdfHeaderGrid {...props} />\n        <EdfHeaderLegend {...props} />\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}